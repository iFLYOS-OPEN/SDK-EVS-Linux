
/* Copyright 2015-present Samsung Electronics Co., Ltd. and other contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * This file is generated by tools/js2c.py
 * Do not modify this.
 */
#ifndef IOTJS_JS_H
#define IOTJS_JS_H

extern const char assert_n[];
extern const uint8_t assert_s[];
extern const size_t assert_l;

extern const char ble_n[];
extern const uint8_t ble_s[];
extern const size_t ble_l;

extern const char ble_characteristic_n[];
extern const uint8_t ble_characteristic_s[];
extern const size_t ble_characteristic_l;

extern const char ble_descriptor_n[];
extern const uint8_t ble_descriptor_s[];
extern const size_t ble_descriptor_l;

extern const char ble_hci_socket_n[];
extern const uint8_t ble_hci_socket_s[];
extern const size_t ble_hci_socket_l;

extern const char ble_hci_socket_acl_stream_n[];
extern const uint8_t ble_hci_socket_acl_stream_s[];
extern const size_t ble_hci_socket_acl_stream_l;

extern const char ble_hci_socket_bindings_n[];
extern const uint8_t ble_hci_socket_bindings_s[];
extern const size_t ble_hci_socket_bindings_l;

extern const char ble_hci_socket_crypto_n[];
extern const uint8_t ble_hci_socket_crypto_s[];
extern const size_t ble_hci_socket_crypto_l;

extern const char ble_hci_socket_gap_n[];
extern const uint8_t ble_hci_socket_gap_s[];
extern const size_t ble_hci_socket_gap_l;

extern const char ble_hci_socket_gatt_n[];
extern const uint8_t ble_hci_socket_gatt_s[];
extern const size_t ble_hci_socket_gatt_l;

extern const char ble_hci_socket_hci_n[];
extern const uint8_t ble_hci_socket_hci_s[];
extern const size_t ble_hci_socket_hci_l;

extern const char ble_hci_socket_hci_status_n[];
extern const uint8_t ble_hci_socket_hci_status_s[];
extern const size_t ble_hci_socket_hci_status_l;

extern const char ble_hci_socket_mgmt_n[];
extern const uint8_t ble_hci_socket_mgmt_s[];
extern const size_t ble_hci_socket_mgmt_l;

extern const char ble_hci_socket_smp_n[];
extern const uint8_t ble_hci_socket_smp_s[];
extern const size_t ble_hci_socket_smp_l;

extern const char ble_primary_service_n[];
extern const uint8_t ble_primary_service_s[];
extern const size_t ble_primary_service_l;

extern const char ble_uuid_util_n[];
extern const uint8_t ble_uuid_util_s[];
extern const size_t ble_uuid_util_l;

extern const char buffer_n[];
extern const uint8_t buffer_s[];
extern const size_t buffer_l;

extern const char console_n[];
extern const uint8_t console_s[];
extern const size_t console_l;

extern const char crypto_n[];
extern const uint8_t crypto_s[];
extern const size_t crypto_l;

extern const char curl_n[];
extern const uint8_t curl_s[];
extern const size_t curl_l;

extern const char dns_n[];
extern const uint8_t dns_s[];
extern const size_t dns_l;

extern const char events_n[];
extern const uint8_t events_s[];
extern const size_t events_l;

extern const char fs_n[];
extern const uint8_t fs_s[];
extern const size_t fs_l;

extern const char http_n[];
extern const uint8_t http_s[];
extern const size_t http_l;

extern const char http_client_n[];
extern const uint8_t http_client_s[];
extern const size_t http_client_l;

extern const char http_common_n[];
extern const uint8_t http_common_s[];
extern const size_t http_common_l;

extern const char http_incoming_n[];
extern const uint8_t http_incoming_s[];
extern const size_t http_incoming_l;

extern const char http_outgoing_n[];
extern const uint8_t http_outgoing_s[];
extern const size_t http_outgoing_l;

extern const char http_server_n[];
extern const uint8_t http_server_s[];
extern const size_t http_server_l;

extern const char iflyos_n[];
extern const uint8_t iflyos_s[];
extern const size_t iflyos_l;

extern const char iflyos_i2c_n[];
extern const uint8_t iflyos_i2c_s[];
extern const size_t iflyos_i2c_l;

extern const char iflyos_util_n[];
extern const uint8_t iflyos_util_s[];
extern const size_t iflyos_util_l;

extern const char iotjs_n[];
extern const uint8_t iotjs_s[];
extern const size_t iotjs_l;

extern const char module_n[];
extern const uint8_t module_s[];
extern const size_t module_l;

extern const char net_n[];
extern const uint8_t net_s[];
extern const size_t net_l;

extern const char pcm_player_n[];
extern const uint8_t pcm_player_s[];
extern const size_t pcm_player_l;

extern const char sqlite_n[];
extern const uint8_t sqlite_s[];
extern const size_t sqlite_l;

extern const char stream_n[];
extern const uint8_t stream_s[];
extern const size_t stream_l;

extern const char stream_duplex_n[];
extern const uint8_t stream_duplex_s[];
extern const size_t stream_duplex_l;

extern const char stream_internal_n[];
extern const uint8_t stream_internal_s[];
extern const size_t stream_internal_l;

extern const char stream_readable_n[];
extern const uint8_t stream_readable_s[];
extern const size_t stream_readable_l;

extern const char stream_writable_n[];
extern const uint8_t stream_writable_s[];
extern const size_t stream_writable_l;

extern const char timers_n[];
extern const uint8_t timers_s[];
extern const size_t timers_l;

extern const char tls_n[];
extern const uint8_t tls_s[];
extern const size_t tls_l;

extern const char util_n[];
extern const uint8_t util_s[];
extern const size_t util_l;

extern const char websocket_n[];
extern const uint8_t websocket_s[];
extern const size_t websocket_l;

extern const char wpa_client_n[];
extern const uint8_t wpa_client_s[];
extern const size_t wpa_client_l;

typedef struct {
  const char* name;
  const void* code;
  const size_t length;
} iotjs_js_module_t;

extern const iotjs_js_module_t js_modules[];

#endif
